0 info it worked if it ends with ok
1 verbose cli [ 'c:\\Program Files (x86)\\nodejs\\node.exe',
1 verbose cli   'c:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.32
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . C:\Users\vad\AppData\Roaming\npm-cache\3a52ce78-.lock
10 verbose tar pack [ 'C:\\Users\\vad\\AppData\\Roaming\\npm-cache\\logich\\0.0.12\\package.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball C:\Users\vad\AppData\Roaming\npm-cache\logich\0.0.12\package.tgz
12 verbose folder .
13 info prepublish logich@0.0.12
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. C:\Users\vad\AppData\Roaming\npm-cache\1f1177db-tar.lock
16 silly lockFile 365933bc--cache-logich-0-0-12-package-tgz tar://C:\Users\vad\AppData\Roaming\npm-cache\logich\0.0.12\package.tgz
17 verbose lock tar://C:\Users\vad\AppData\Roaming\npm-cache\logich\0.0.12\package.tgz C:\Users\vad\AppData\Roaming\npm-cache\365933bc--cache-logich-0-0-12-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 365933bc--cache-logich-0-0-12-package-tgz tar://C:\Users\vad\AppData\Roaming\npm-cache\logich\0.0.12\package.tgz
21 silly lockFile 365933bc--cache-logich-0-0-12-package-tgz tar://C:\Users\vad\AppData\Roaming\npm-cache\logich\0.0.12\package.tgz
22 silly lockFile ee4e17ff--npm-cache-logich-0-0-12-package C:\Users\vad\AppData\Roaming\npm-cache\logich\0.0.12\package
23 verbose lock C:\Users\vad\AppData\Roaming\npm-cache\logich\0.0.12\package C:\Users\vad\AppData\Roaming\npm-cache\ee4e17ff--npm-cache-logich-0-0-12-package.lock
24 silly lockFile ee4e17ff--npm-cache-logich-0-0-12-package C:\Users\vad\AppData\Roaming\npm-cache\logich\0.0.12\package
25 silly lockFile ee4e17ff--npm-cache-logich-0-0-12-package C:\Users\vad\AppData\Roaming\npm-cache\logich\0.0.12\package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'logich',
28 silly publish   version: '0.0.12',
28 silly publish   description: 'A light-weight extensible logging system written in Node.js way.',
28 silly publish   keywords: [ 'logger', 'logging', 'logs', 'logich' ],
28 silly publish   main: './logich',
28 silly publish   homepage: 'https://github.com/streamich/logich',
28 silly publish   repository: { type: 'git', url: 'https://github.com/streamich/logich' },
28 silly publish   gitHead: '5f10a2693a14e462ae24a6a3be101dd79290428a',
28 silly publish   readme: '# Logich\r\n\r\n`logich` is an extensible plugin based logging system inpired by `express` package and Node.js way of writing code.\r\n`logich` itself is just a empty shell to which you add middleware to process your logs.\r\n\r\nFor example, if you just use `logich` without any registered middleware it will do nothing:\r\n\r\n    var logich = require("logich");\r\n    \r\n    var logger = logich();\r\n    logger.log("Hello world!"); // Does nothing...\r\n \r\nTo make it do something, you have to register middleware that will process your logs.\r\nYou can use basic built-in middleware as follows: \r\n    \r\n    var logger = logich()\r\n        .use(logich.object)     // Converts message to object.\r\n        .use(logich.time)       // Adds timestamp in JSON format to the object.\r\n        .use(logich.json)       // Format log entry line as JSON.\r\n        .use(logich.console);   // Prints messages to STDIN.\r\n    \r\n    logger.log("Hello world!");\r\n    \r\n    // Outputs the below in STDIN:\r\n    //{ message: \'Hello world!\', time: \'2014-11-15T15:54:46.059Z\' }\r\n\r\n## Middleware\r\n\r\nWrite your own middleware:\r\n\r\n    logger.use(function(message, next) {\r\n        // Do something with the log message...\r\n        \r\n        // Execute next middleware callback:\r\n        next(message);\r\n    });\r\n\r\nOr use already written middleware:\r\n\r\n- [`logich-loggly`](https://www.npmjs.org/package/logich-loggly) - write logs to [loggly.com](http://loggly.com).\r\n- [`logich-file`](https://www.npmjs.org/package/logich-file) - write to a local file on a disk.\r\n- [`logich-file-dated`](https://www.npmjs.org/package/logich-file-dated) - write logs to files that rotate by date.',
28 silly publish   readmeFilename: 'README.md',
28 silly publish   bugs: { url: 'https://github.com/streamich/logich/issues' },
28 silly publish   _id: 'logich@0.0.12',
28 silly publish   scripts: {},
28 silly publish   _shasum: '2257212641275d76f2d9f5d1560a8564bf88c1ff',
28 silly publish   _from: '.' }
29 verbose request where is /logich
30 verbose request registry https://registry.npmjs.org/
31 verbose request id eee325cd1ae82daa
32 verbose url raw /logich
33 verbose url resolving [ 'https://registry.npmjs.org/', './logich' ]
34 verbose url resolved https://registry.npmjs.org/logich
35 verbose request where is https://registry.npmjs.org/logich
36 info trying registry request attempt 1 at 21:06:20
37 http PUT https://registry.npmjs.org/logich
38 http 403 https://registry.npmjs.org/logich
39 verbose headers { date: 'Sat, 15 Nov 2014 21:06:29 GMT',
39 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
39 verbose headers   'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=60',
39 verbose headers   'content-length': '3823',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   'x-served-by': 'cache-fra1233-FRA',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1416085588.849874,VS0,VE677',
39 verbose headers   'keep-alive': 'timeout=10, max=50',
39 verbose headers   connection: 'Keep-Alive' }
40 error publish Failed PUT 403
41 error Error: forbidden cannot modify pre-existing version: 0.0.12
41 error old={"name":"logich","version":"0.0.12","description":"A light-weight extensible logging system written in Node.js way.","keywords":["logger","logging","logs"],"main":"./logich","repository":{},"_id":"logich@0.0.12","scripts":{},"_shasum":"7ca5d6c822e83d28f3cfff8033ac7f17f46c3a59","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"streamich","email":"streamich@dalecky.com"},"maintainers":[{"name":"streamich","email":"streamich@dalecky.com"}],"dist":{"shasum":"7ca5d6c822e83d28f3cfff8033ac7f17f46c3a59","tarball":"http://registry.npmjs.org/logich/-/logich-0.0.12.tgz"}}
41 error new={"name":"logich","version":"0.0.12","description":"A light-weight extensible logging system written in Node.js way.","keywords":["logger","logging","logs","logich"],"main":"./logich","homepage":"https://github.com/streamich/logich","repository":{"type":"git","url":"https://github.com/streamich/logich"},"gitHead":"5f10a2693a14e462ae24a6a3be101dd79290428a","readme":"# Logich\u000d\u000a\u000d\u000a`logich` is an extensible plugin based logging system inpired by `express` package and Node.js way of writing code.\u000d\u000a`logich` itself is just a empty shell to which you add middleware to process your logs.\u000d\u000a\u000d\u000aFor example, if you just use `logich` without any registered middleware it will do nothing:\u000d\u000a\u000d\u000a    var logich = require(\"logich\");\u000d\u000a    \u000d\u000a    var logger = logich();\u000d\u000a    logger.log(\"Hello world!\"); // Does nothing...\u000d\u000a \u000d\u000aTo make it do something, you have to register middleware that will process your logs.\u000d\u000aYou can use basic built-in middleware as follows: \u000d\u000a    \u000d\u000a    var logger = logich()\u000d\u000a        .use(logich.object)     // Converts message to object.\u000d\u000a        .use(logich.time)       // Adds timestamp in JSON format to the object.\u000d\u000a        .use(logich.json)       // Format log entry line as JSON.\u000d\u000a        .use(logich.console);   // Prints messages to STDIN.\u000d\u000a    \u000d\u000a    logger.log(\"Hello world!\");\u000d\u000a    \u000d\u000a    // Outputs the below in STDIN:\u000d\u000a    //{ message: 'Hello world!', time: '2014-11-15T15:54:46.059Z' }\u000d\u000a\u000d\u000a## Middleware\u000d\u000a\u000d\u000aWrite your own middleware:\u000d\u000a\u000d\u000a    logger.use(function(message, next) {\u000d\u000a        // Do something with the log message...\u000d\u000a        \u000d\u000a        // Execute next middleware callback:\u000d\u000a        next(message);\u000d\u000a    });\u000d\u000a\u000d\u000aOr use already written middleware:\u000d\u000a\u000d\u000a- [`logich-loggly`](https://www.npmjs.org/package/logich-loggly) - write logs to [loggly.com](http://loggly.com).\u000d\u000a- [`logich-file`](https://www.npmjs.org/package/logich-file) - write to a local file on a disk.\u000d\u000a- [`logich-file-dated`](https://www.npmjs.org/package/logich-file-dated) - write logs to files that rotate by date.","readmeFilename":"README.md","bugs":{"url":"https://github.com/streamich/logich/issues"},"_id":"logich@0.0.12","scripts":{},"_shasum":"2257212641275d76f2d9f5d1560a8564bf88c1ff","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"streamich","email":"streamich@dalecky.com"},"maintainers":[{"name":"streamich","email":"streamich@dalecky.com"}],"dist":{"shasum":"2257212641275d76f2d9f5d1560a8564bf88c1ff","tarball":"http://registry.npmjs.org/logich/-/logich-0.0.12.tgz"}}: logich
41 error     at RegClient.<anonymous> (c:\Program Files (x86)\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:308:14)
41 error     at Request._callback (c:\Program Files (x86)\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:246:65)
41 error     at Request.self.callback (c:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:236:22)
41 error     at Request.emit (events.js:98:17)
41 error     at Request.<anonymous> (c:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:1142:14)
41 error     at Request.emit (events.js:117:20)
41 error     at IncomingMessage.<anonymous> (c:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:117:20)
41 error     at _stream_readable.js:943:16
41 error     at process._tickCallback (node.js:419:13)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Windows_NT 6.2.9200
44 error command "c:\\Program Files (x86)\\nodejs\\node.exe" "c:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
45 error cwd c:\dev\npm\logich
46 error node -v v0.10.32
47 error npm -v 1.4.28
48 verbose exit [ 1, true ]
